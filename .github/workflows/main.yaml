# .github/workflows/main.yaml
name: Release application

on:
  push:
    branches:
      - main

env:
  # these two must be set as encrypted repo secrets
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_SA_KEY:  ${{ secrets.GKE_SA_KEY }}

  # your cluster info
  GKE_CLUSTER: pingpong-cluster
  GKE_ZONE:    us-central1-a
  REGION:      us-central1

  # Artifact Registry repos & image names
  REPO_PING: pingpong
  REPO_LOG:  log-output

  IMAGE_PING: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_PING }}/${{ env.REPO_PING }}
  IMAGE_LOG:  ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_LOG }}/${{ env.REPO_LOG }}

  BRANCH:      ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish & Deploy
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Check out code
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Authenticate to GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GKE_SA_KEY }}

      # 3️⃣ Install gcloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # 4️⃣ Enable Docker ↔ Artifact Registry
      - name: Configure Docker
        run: gcloud --quiet auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # 5️⃣ Build & push pingpong
      - name: Build & Publish pingpong
        run: |
          docker build -t $IMAGE_PING:$BRANCH-$GITHUB_SHA pingpong
          docker push $IMAGE_PING:$BRANCH-$GITHUB_SHA

      # 6️⃣ Build & push log-output
      - name: Build & Publish log-output
        run: |
          docker build -t $IMAGE_LOG:$BRANCH-$GITHUB_SHA log-output
          docker push $IMAGE_LOG:$BRANCH-$GITHUB_SHA

      # 7️⃣ Grab GKE kubeconfig
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location:     ${{ env.GKE_ZONE }}
          project_id:   ${{ env.PROJECT_ID }}

      # 8️⃣ Roll out new image to pingpong
      - name: Deploy pingpong
        run: |
          kubectl set image deployment/pingpong-deployment \
            pingpong=$IMAGE_PING:$BRANCH-$GITHUB_SHA
          kubectl rollout status deployment/pingpong-deployment

      # 9️⃣ Roll out new image to log-output
      - name: Deploy log-output
        run: |
          kubectl set image deployment/log-output \
            log-output=$IMAGE_LOG:$BRANCH-$GITHUB_SHA
          kubectl rollout status deployment/log-output
